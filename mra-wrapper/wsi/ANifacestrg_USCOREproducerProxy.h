/* ANifacestrg_USCOREproducerProxy.h
   Generated by gSOAP 2.7.9e from ANifaces.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef ANifacestrg_USCOREproducer_H
#define ANifacestrg_USCOREproducer_H
#include "ANifacesH.h"
extern SOAP_NMAC struct Namespace ANifaces_namespaces[];

namespace ANifaces {
class trg_USCOREproducer
{   public:
	struct soap *soap;
	const char *endpoint;
	trg_USCOREproducer() { soap = soap_new(); if (soap) soap->namespaces = ANifaces_namespaces; endpoint = "http://localhost:8020"; };
	virtual ~trg_USCOREproducer() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	virtual int ns2__sendTrigger(ns2__WSANTrigger *trigger, std::string &result) { return soap ? soap_call_ns2__sendTrigger(soap, endpoint, NULL, trigger, result) : SOAP_EOM; };
	virtual int ns2__register(int id, std::string &result) { return soap ? soap_call_ns2__register(soap, endpoint, NULL, id, result) : SOAP_EOM; };
	virtual int ns2__unRegister(int id, std::string &result) { return soap ? soap_call_ns2__unRegister(soap, endpoint, NULL, id, result) : SOAP_EOM; };
};

} // namespace ANifaces

#endif
