/* ANifacesRegistrationComponentSoapBindingProxy.h
   Generated by gSOAP 2.7.9e from ANifaces.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef ANifacesRegistrationComponentSoapBinding_H
#define ANifacesRegistrationComponentSoapBinding_H
#include "ANifacesH.h"
extern SOAP_NMAC struct Namespace ANifaces_namespaces[];

namespace ANifaces {
class RegistrationComponentSoapBinding
{   public:
	struct soap *soap;
	const char *endpoint;
	RegistrationComponentSoapBinding() { soap = soap_new(); if (soap) soap->namespaces = ANifaces_namespaces; endpoint = "http://localhost:8180/ACSFC/services/RegistrationComponent"; };
	virtual ~RegistrationComponentSoapBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	virtual int ns1__registerFE(std::string _feName, std::string _feDescription, ArrayOf_USCOREsoapenc_USCOREstring *_sapId, ArrayOf_USCOREsoapenc_USCOREstring *_strLocation, ArrayOf_USCOREsoapenc_USCOREstring *_sapDescription, struct ns1__registerFEResponse &_param_1) { return soap ? soap_call_ns1__registerFE(soap, endpoint, NULL, _feName, _feDescription, _sapId, _strLocation, _sapDescription, _param_1) : SOAP_EOM; };
	virtual int ns1__unRegisterFE(std::string _feName, struct ns1__unRegisterFEResponse &_param_2) { return soap ? soap_call_ns1__unRegisterFE(soap, endpoint, NULL, _feName, _param_2) : SOAP_EOM; };
};

} // namespace ANifaces

#endif
